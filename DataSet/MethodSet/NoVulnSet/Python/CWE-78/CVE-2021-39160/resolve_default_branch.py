def resolve_default_branch(self):
    """
        This will resolve the default branch of the repo in
        the case where the branch given does not exist
        """
    try:
        head_branch = subprocess.run(['git', 'ls-remote', '--symref', '--', self.git_url, 'HEAD'], capture_output=True, text=True, check=True)
        for line in head_branch.stdout.splitlines():
            if line.startswith('ref:'):
                (_, ref, head) = line.split()
                (refs, heads, branch_name) = ref.split('/', 2)
                return branch_name
        raise ValueError(f'default branch not found in {self.git_url}')
    except subprocess.CalledProcessError:
        m = f'Problem accessing HEAD branch: {self.git_url}'
        logging.exception(m)
        raise ValueError(m)