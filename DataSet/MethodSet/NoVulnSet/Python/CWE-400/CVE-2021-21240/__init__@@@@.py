def __init__(self, credentials, host, request_uri, headers, response, content, http):
    Authentication.__init__(self, credentials, host, request_uri, headers, response, content, http)
    self.challenge = auth._parse_www_authenticate(response, 'www-authenticate')['digest']
    qop = self.challenge.get('qop', 'auth')
    self.challenge['qop'] = 'auth' in [x.strip() for x in qop.split()] and 'auth' or None
    if self.challenge['qop'] is None:
        raise UnimplementedDigestAuthOptionError(_('Unsupported value for qop: %s.' % qop))
    self.challenge['algorithm'] = self.challenge.get('algorithm', 'MD5').upper()
    if self.challenge['algorithm'] != 'MD5':
        raise UnimplementedDigestAuthOptionError(_('Unsupported value for algorithm: %s.' % self.challenge['algorithm']))
    self.A1 = ''.join([self.credentials[0], ':', self.challenge['realm'], ':', self.credentials[1]])
    self.challenge['nc'] = 1