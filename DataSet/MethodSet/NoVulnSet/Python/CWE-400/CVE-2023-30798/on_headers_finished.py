def on_headers_finished(self) -> None:
    (disposition, options) = parse_options_header(self._current_part.content_disposition)
    try:
        self._current_part.field_name = _user_safe_decode(options[b'name'], self._charset)
    except KeyError:
        raise MultiPartException('The Content-Disposition header field "name" must be provided.')
    if b'filename' in options:
        self._current_files += 1
        if self._current_files > self.max_files:
            raise MultiPartException(f'Too many files. Maximum number of files is {self.max_files}.')
        filename = _user_safe_decode(options[b'filename'], self._charset)
        tempfile = SpooledTemporaryFile(max_size=self.max_file_size)
        self._current_part.file = UploadFile(file=tempfile, size=0, filename=filename, headers=Headers(raw=self._current_part.item_headers))
    else:
        self._current_fields += 1
        if self._current_fields > self.max_fields:
            raise MultiPartException(f'Too many fields. Maximum number of fields is {self.max_fields}.')
        self._current_part.file = None