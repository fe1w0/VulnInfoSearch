external_contract = '\n@external\ndef ok() -> Bytes[2]:\n    return b"12"\n\n@external\ndef should_fail() -> Bytes[3]:\n    return b"123"\n    '
code = '\ninterface BadContract:\n    def ok() -> Bytes[2]: view\n    def should_fail() -> Bytes[2]: view\n\nfoo: BadContract\n\n@external\ndef __init__(addr: BadContract):\n    self.foo = addr\n\n\n@external\ndef test_ok() -> Bytes[2]:\n    return self.foo.ok()\n\n@external\ndef test_fail() -> Bytes[3]:\n    return self.foo.should_fail()\n    '
bad_c = get_contract(external_contract)
c = get_contract(code, bad_c.address)
assert bad_c.ok() == b'12'
assert bad_c.should_fail() == b'123'
assert c.test_ok() == b'12'
assert_tx_failed(lambda : c.test_fail())