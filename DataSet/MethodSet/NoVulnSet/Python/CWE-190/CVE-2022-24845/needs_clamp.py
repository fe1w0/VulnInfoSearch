def needs_clamp(t, encoding):
    if encoding == Encoding.VYPER:
        return False
    if encoding != Encoding.ABI:
        raise CompilerPanic('unreachable')
    if isinstance(t, (ByteArrayLike, DArrayType)):
        return True
    if isinstance(t, BaseType):
        return t.typ not in ('int256', 'uint256', 'bytes32')
    if isinstance(t, SArrayType):
        return needs_clamp(t.subtype, encoding)
    if isinstance(t, TupleLike):
        return any((needs_clamp(m, encoding) for m in t.tuple_members()))
    raise CompilerPanic('unreachable')