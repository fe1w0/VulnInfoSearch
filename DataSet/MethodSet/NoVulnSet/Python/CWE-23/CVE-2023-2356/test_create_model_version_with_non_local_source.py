name = 'model'
mlflow_client.create_registered_model(name)
exp_id = mlflow_client.create_experiment('test')
run = mlflow_client.create_run(experiment_id=exp_id)
response = requests.post(f'{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create', json={'name': name, 'source': run.info.artifact_uri[len('file://'):], 'run_id': run.info.run_id})
assert response.status_code == 200
response = requests.post(f'{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create', json={'name': name, 'source': 'mlflow-artifacts:/models', 'run_id': run.info.run_id})
assert response.status_code == 200
response = requests.post(f'{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create', json={'name': name, 'source': 'mlflow-artifacts://host:9000/models', 'run_id': run.info.run_id})
assert response.status_code == 200
response = requests.post(f'{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create', json={'name': name, 'source': 'mlflow-artifacts://host:9000/models/../../../', 'run_id': run.info.run_id})
assert response.status_code == 400
assert 'If supplying a source as an http, https,' in response.json()['message']
response = requests.post(f'{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create', json={'name': name, 'source': 'http://host:9000/models/../../../', 'run_id': run.info.run_id})
assert response.status_code == 400
assert 'If supplying a source as an http, https,' in response.json()['message']
response = requests.post(f'{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create', json={'name': name, 'source': 'https://host/api/2.0/mlflow-artifacts/artifacts/../../../', 'run_id': run.info.run_id})
assert response.status_code == 400
assert 'If supplying a source as an http, https,' in response.json()['message']
response = requests.post(f'{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create', json={'name': name, 'source': 's3a://my_bucket/api/2.0/mlflow-artifacts/artifacts/../../../', 'run_id': run.info.run_id})
assert response.status_code == 400
assert 'If supplying a source as an http, https,' in response.json()['message']
response = requests.post(f'{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create', json={'name': name, 'source': 'ftp://host:8888/api/2.0/mlflow-artifacts/artifacts/../../../', 'run_id': run.info.run_id})
assert response.status_code == 400
assert 'If supplying a source as an http, https,' in response.json()['message']