name = 'model'
mlflow_client.create_registered_model(name)
exp_id = mlflow_client.create_experiment('test')
run = mlflow_client.create_run(experiment_id=exp_id)
response = requests.post(f'{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create', json={'name': name, 'source': run.info.artifact_uri[len('file://'):], 'run_id': run.info.run_id})
assert response.status_code == 200
response = requests.post(f'{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create', json={'name': name, 'source': run.info.artifact_uri[len('file://'):]})
assert response.status_code == 400
assert 'To use a local path as a model version' in response.json()['message']
response = requests.post(f'{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create', json={'name': name, 'source': '/tmp', 'run_id': run.info.run_id})
assert response.status_code == 400
assert 'To use a local path as a model version' in response.json()['message']