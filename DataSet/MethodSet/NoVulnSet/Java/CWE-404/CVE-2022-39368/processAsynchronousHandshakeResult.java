public class DTLSConnector implements Connector, RecordLayer {
	public void processAsynchronousHandshakeResult(final HandshakeResult handshakeResult) {
		final Connection connection = connectionStore.get(handshakeResult.getConnectionId());
		if (connection != null && connection.hasOngoingHandshake()) {
			SerialExecutor serialExecutor = connection.getExecutor();

			try {

				serialExecutor.execute(new Runnable() {

					@Override
					public void run() {
						if (running.get() && connection.isExecuting()) {
							Handshaker handshaker = connection.getOngoingHandshake();
							if (handshaker != null) {
								try {
									handshaker.processAsyncHandshakeResult(handshakeResult);
								} catch (HandshakeException e) {
									handleExceptionDuringHandshake(e, connection, null);
								} catch (IllegalStateException e) {
									LOGGER.warn("Exception while processing handshake result [{}]", connection, e);
								}
							} else {
								LOGGER.debug("No ongoing handshake for result [{}]", connection);
							}
						} else {
							LOGGER.debug("Execution stopped while processing handshake result [{}]", connection);
						}
					}
				});
			} catch (RejectedExecutionException e) {
				// dont't terminate connection on shutdown!
				LOGGER.debug("Execution rejected while processing handshake result [{}]", connection, e);
			} catch (RuntimeException e) {
				LOGGER.warn("Unexpected error occurred while processing handshake result [{}]", connection, e);
			}
		} else {
			LOGGER.debug("No connection or ongoing handshake for handshake result [{}]", connection);
		}
	}
}