class RoutingInBoundHandler extends SimpleChannelInboundHandler<io.micronaut.http.HttpRequest<?>> {
    public void emitDefaultNotFoundResponse(ChannelHandlerContext ctx, io.micronaut.http.HttpRequest<?> request) {
        MutableHttpResponse<Object> res = newNotFoundError(request);
        AtomicReference<HttpRequest<?>> requestReference = new AtomicReference<>(request);
        Flowable<? extends MutableHttpResponse<?>> responsePublisher = filterPublisher(
                requestReference,
                Flowable.just(res),
                ctx.channel().eventLoop(),
                false
        );
        subscribeToResponsePublisher(
                ctx,
                MediaType.APPLICATION_JSON_TYPE,
                requestReference,
                responsePublisher
        );
    }
}