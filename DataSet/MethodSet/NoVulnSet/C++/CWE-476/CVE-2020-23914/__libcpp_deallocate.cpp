Values& sv) {
        REQUIRE(sv.token() == "Hello");
    };

    parser["WORLD"] = [](const SemanticValues& sv) {
        REQUIRE(sv.token() == "World");
    };

    auto ret = parser.parse("  Hello World  ");
    REQUIRE(ret == true);
}

TEST_CASE("mutable lambda test", "[general]")
{
    std::vector<std::string> vec;

    parser pg("ROOT <- 'mutable lambda test'");

    // This test makes sure if the following code can be compiled.
    pg["TOKEN"] = [=](const SemanticValues& sv) mutable {
      