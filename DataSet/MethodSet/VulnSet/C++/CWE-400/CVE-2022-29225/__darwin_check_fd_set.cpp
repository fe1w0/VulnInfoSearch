/ This means that zlib needs more input, so stop here.
  }

  if (result < 0) {
    decompression_error_ = result;
    ENVOY_LOG(trace,
              "zlib decompression error: {}, msg: {}. Error codes are defined in "
              "https://www.zlib.net/manual.html",
              result, zstream_ptr_->msg);
    chargeErrorStats(result);
    return false;
  }

  return true;
}

void ZlibDecompressorImpl::chargeErrorStats(const int result) {
  switch (result) {
  case Z_ERRNO:
    stats_.zlib_errno_.inc();
    break;
 