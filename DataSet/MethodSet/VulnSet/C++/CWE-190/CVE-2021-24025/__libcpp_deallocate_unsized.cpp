 auto& fd = fds.back();
      fd.fd = intfd;
      fd.events = flag;
      fd.revents = 0;
    }
  );
}

static void sock_array_from_fd_set(Variant &sockets,
                                   const std::vector<pollfd>& fds,
                                   int &nfds, int &count, const short flag) {
  Array ret = Array::CreateDArray();
  assertx(sockets.isArray());
  const auto& sock_array = sockets.asCArrRef();
  IterateKVNoInc(
    sock_array.get(),
    [