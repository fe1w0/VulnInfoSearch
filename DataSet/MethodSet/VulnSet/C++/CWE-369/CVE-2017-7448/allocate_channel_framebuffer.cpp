    void allocate_channel_framebuffer(int desired_cmp,
                                      BlockBasedImageBase<force_memory_optimized> *framebuffer,
                                      bool memory_optimized=force_memory_optimized) const {
        uint64_t total_req_blocks = 0;
        for (int cmp = 0; cmp < (int)header_.size() && cmp < cmpc_; cmp++) {
            total_req_blocks += header_[cmp].info_.bcv * header_[cmp].info_.bch;
        }
        for (int cmp = 0; cmp < (int)header_.size() && cmp < cmpc_; cmp++) {
            int bc_allocated = header_[cmp].info_.bc;
            int64_t max_cmp_bc = max_number_of_blocks;
            max_cmp_bc *= header_[cmp].info_.bcv;
            max_cmp_bc *= header_[cmp].info_.bch;
            max_cmp_bc /= total_req_blocks;
            if (bc_allocated > max_cmp_bc) {
                bc_allocated = max_cmp_bc - (max_cmp_bc % header_[cmp].info_.bch);
            }
            if (cmp == desired_cmp) {
                framebuffer->init(header_[cmp].info_.bch,
                                  header_[cmp].info_.bcv,
                                  bc_allocated,
                                  memory_optimized);
                break;
            }
        }
    }