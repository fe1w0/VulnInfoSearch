c:
  TestOpLevelCostEstimator() {
    compute_memory_overlap_ = true;
    device_info_ = DeviceInfo();
  }
  ~TestOpLevelCostEstimator() override {}

  void SetDeviceInfo(const DeviceInfo& device_info) {
    device_info_ = device_info;
  }

  void SetComputeMemoryOverlap(bool value) { compute_memory_overlap_ = value; }

 protected:
  DeviceInfo GetDeviceInfo(const DeviceProperties& device) const override {
    return device_info_;
  }

  DeviceInfo device_info_;
};

void ExpectZeroCost(const Costs& cost) {
  EXPECT_TRUE(cost.inaccurate);
  EXPECT_EQ(cost.compute_time, Costs::Duration::zero());
  EXPECT_EQ(cost.execution_time, Costs::Duration::zero());
  EXPECT_EQ(c