public void toScientificString(StringBuilder result) {
    assert(!isApproximate);
    if (isNegative()) {
        result.append('-');
    }
    if (precision == 0) {
        result.append("0E+0");
        return;
    }
    // NOTE: It is not safe to add to lOptPos (aka maxInt) or subtract from
    // rOptPos (aka -maxFrac) due to overflow.
    int upperPos = Math.min(precision + scale, lOptPos) - scale - 1;
    int lowerPos = Math.max(scale, rOptPos) - scale;
    int p = upperPos;
    result.append((char) ('0' + getDigitPos(p)));
    if ((--p) >= lowerPos) {
        result.append('.');
        for (; p >= lowerPos; p--) {
            result.append((char) ('0' + getDigitPos(p)));
        }
    }
    result.append('E');
    int _scale = upperPos + scale;
    if (_scale < 0) {
        _scale *= -1;
        result.append('-');
    } else {
        result.append('+');
    }
    if (_scale == 0) {
        result.append('0');
    }
    int insertIndex = result.length();
    while (_scale > 0) {
        int quot = _scale / 10;
        int rem = _scale % 10;
        result.insert(insertIndex, (char) ('0' + rem));
        _scale = quot;
    }