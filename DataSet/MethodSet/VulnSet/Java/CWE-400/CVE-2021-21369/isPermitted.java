public static boolean isPermitted(
    final Optional<AuthenticationService> authenticationService,
    final Optional<User> optionalUser,
    final JsonRpcMethod jsonRpcMethod) {

  AtomicBoolean foundMatchingPermission = new AtomicBoolean();

  if (authenticationService.isPresent()) {
    if (optionalUser.isPresent()) {
      User user = optionalUser.get();
      for (String perm : jsonRpcMethod.getPermissions()) {
        user.isAuthorized(
            perm,
            (authed) -> {
              if (authed.result()) {
                LOG.trace(
                    "user {} authorized : {} via permission {}",
                    user,
                    jsonRpcMethod.getName(),
                    perm);
                foundMatchingPermission.set(true);
              }
            });
      }
    }
  } else {
    // no auth provider configured thus anything is permitted
    foundMatchingPermission.set(true);
  }

  if (!foundMatchingPermission.get()) {
    LOG.trace("user NOT authorized : {}", jsonRpcMethod.getName());
  }
  return foundMatchingPermission.get();
}