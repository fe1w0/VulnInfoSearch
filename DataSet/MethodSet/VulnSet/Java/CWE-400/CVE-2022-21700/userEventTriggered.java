class RoutingInBoundHandler extends SimpleChannelInboundHandler<io.micronaut.http.HttpRequest<?>> {
    public static final Logger LOG = LoggerFactory.getLogger(RoutingInBoundHandler.class);
    public static final Pattern IGNORABLE_ERROR_MESSAGE = Pattern.compile(
    public final Router router;
    public final ExecutorSelector executorSelector;
    public final StaticResourceResolver staticResourceResolver;
    public final ExecutorService ioExecutor;
    public final BeanLocator beanLocator;
    public final NettyHttpServerConfiguration serverConfiguration;
    public final RequestArgumentSatisfier requestArgumentSatisfier;
    public final MediaTypeCodecRegistry mediaTypeCodecRegistry;
    public final NettyCustomizableResponseTypeHandlerRegistry customizableResponseTypeHandlerRegistry;
    public void userEventTriggered(ChannelHandlerContext ctx, Object evt) throws Exception {
        try {
            if (evt instanceof IdleStateEvent) {
                IdleStateEvent idleStateEvent = (IdleStateEvent) evt;
                IdleState state = idleStateEvent.state();
                if (state == IdleState.ALL_IDLE) {
                    ctx.close();
                }
            }
        } finally {
            super.userEventTriggered(ctx, evt);
        }
    }
}