global sniffer
tap = get_bridge(os.environ['TAP'])
child.sendline('unittests')
print('.' * check_unittests(child), end='', flush=True)
lladdr_src = get_host_lladdr(tap)
child.sendline('ifconfig')
child.expect('HWaddr: (?P<hwaddr>[A-Fa-f:0-9]+)\\s')
hwaddr_dst = child.match.group('hwaddr').lower()
child.expect('(?P<lladdr>fe80::[A-Fa-f:0-9]+)\\s')
lladdr_dst = child.match.group('lladdr').lower()
sniffer = Sniffer(tap)

def run(func):
    if child.logfile == sys.stdout:
        func(child, tap, hwaddr_dst, lladdr_dst, lladdr_src)
    else:
        try:
            func(child, tap, hwaddr_dst, lladdr_dst, lladdr_src)
            print('.', end='', flush=True)
        except Exception as e:
            print('FAILED')
            raise e
run(test_wrong_type)
run(test_seg_left_gt_len_addresses)
run(test_multicast_dst)
run(test_multicast_addr)
run(test_multiple_addrs_of_mine_uncomp)
run(test_forward_uncomp)
run(test_forward_uncomp_not_first_ext_hdr)
run(test_seq_left_0)
run(test_time_exc)
print('SUCCESS')